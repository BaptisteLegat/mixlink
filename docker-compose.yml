services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./back:/var/www/html:ro
    depends_on:
      - php
      - database

  php:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: php
    restart: always
    volumes:
      - ./.git:/var/www/html/.git
      - ./back:/var/www/html
    depends_on:
      - database

  database:
    image: mysql:latest
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mixlink
      MYSQL_USER: mixlink
      MYSQL_PASSWORD: password
    volumes:
      - ./back/docker/mysql/init/:/docker-entrypoint-initdb.d
      - ./back/docker/mysql/data/:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    depends_on:
      - database
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database

  mercure:
    image: dunglas/mercure:latest
    container_name: mercure
    restart: always
    environment:
      SERVER_NAME: ':3001'
      MERCURE_PUBLISHER_JWT_KEY: 'aVerySecretKey!ForMercureJWT123456789'
      MERCURE_SUBSCRIBER_JWT_KEY: 'aVerySecretKey!ForMercureJWT123456789'
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://localhost:3000 http://localhost
    ports:
      - "3001:3001"
    volumes:
      - mercure_data:/data
      - mercure_config:/config

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: vue_front
    ports:
      - "3000:3000"
    volumes:
      - ./front/src:/app/src
      - /app/node_modules
    stdin_open: true
    tty: true

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass "mixlink_redis_password"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  mercure_data:
  mercure_config:
  redis_data:
