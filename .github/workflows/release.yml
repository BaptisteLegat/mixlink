name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release GitHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read CHANGELOG for release notes
        id: changelog
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "🔍 Extracting notes for version: $VERSION"

          # Affichage debug du CHANGELOG
          echo "📝 CHANGELOG content:"
          cat CHANGELOG.md

          # Trouver la ligne de début
          START_LINE=$(grep -nE "^## \[${VERSION//./\\.}\]" CHANGELOG.md | cut -d: -f1)
          if [ -z "$START_LINE" ]; then
            START_LINE=$(grep -nE "^## \[${VERSION//./\\.}\] - " CHANGELOG.md | cut -d: -f1)
          fi

          if [ -z "$START_LINE" ]; then
            echo "⚠️ Version $VERSION not found in CHANGELOG"
            NOTES="No specific release notes found for this version."
          else
            echo "✅ Found version at line $START_LINE"

            # Cherche la ligne de début de la version suivante
            NEXT_VERSION_LINE=$(awk "NR > $START_LINE && /^## \\[/" CHANGELOG.md | head -n 1 | grep -n "^" | cut -d: -f1)
            if [ -z "$NEXT_VERSION_LINE" ]; then
              NOTES=$(tail -n +$((START_LINE + 1)) CHANGELOG.md)
            else
              END_LINE=$((START_LINE + NEXT_VERSION_LINE - 2))
              NOTES=$(sed -n "$((START_LINE + 1)),$END_LINE"p CHANGELOG.md)
            fi

            echo "📄 Extracted notes:"
            echo "$NOTES"
          fi

          {
            echo "notes<<EOF"
            echo "$NOTES"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.notes }}
