name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release GitHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read CHANGELOG for release notes
        id: changelog
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "Looking for version: $VERSION"

          # Search for the version in CHANGELOG
          START_LINE=$(grep -nE "^## \[${VERSION}\]" CHANGELOG.md | head -1 | cut -d: -f1)

          if [ -z "$START_LINE" ]; then
            echo "Version $VERSION not found in CHANGELOG.md"
            echo "Available versions:"
            grep -E "^## \[" CHANGELOG.md
            NOTES="No specific release notes found for this version."
          else
            echo "Found version at line: $START_LINE"

            # Find the next section (next line starting with ## [)
            NEXT_LINE=$(tail -n +$((START_LINE + 1)) CHANGELOG.md | grep -nE "^## \[" | head -1 | cut -d: -f1)

            if [ -z "$NEXT_LINE" ]; then
              # If no next section is found, extract all lines after the current section
              NOTES=$(tail -n +$((START_LINE + 1)) CHANGELOG.md | sed '/^$/N;/^\n$/d')
            else
              # Calculate the end line (line before the next section)
              END_LINE=$((START_LINE + NEXT_LINE - 2))
              echo "Extracting lines from $((START_LINE + 1)) to $END_LINE"
              NOTES=$(sed -n "$((START_LINE + 1)),${END_LINE}p" CHANGELOG.md)
            fi

            # Remove trailing empty lines
            NOTES=$(echo "$NOTES" | sed -e '/./,$!d' -e :a -e '/^\s*$/N' -e '/\n\s*$/ba' -e 's/\n\s*$//')
          fi

          {
            echo "notes<<EOF"
            echo "$NOTES"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.notes }}
